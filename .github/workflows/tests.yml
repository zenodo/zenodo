# -*- coding: utf-8 -*-
#
# This file is part of Zenodo.
# Copyright (C) 2021 CERN.
#
# Zenodo is free software; you can redistribute it
# and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# Zenodo is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Zenodo; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307, USA.
#
# In applying this license, CERN does not
# waive the privileges and immunities granted to it by virtue of its status
# as an Intergovernmental Organization or submit itself to any jurisdiction.

name: CI

on:
  push:
    branches: master
  pull_request:
    branches: master
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason'
        required: false
        default: 'Manual trigger'

jobs:
  tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [2.7]
        SQLALCHEMY_DATABASE_URI: [
          "postgresql+psycopg2://postgres@localhost:5432/zenodo"]
        REQUIREMENTS: ['prod']

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Use Node.js 6.x
        uses: actions/setup-node@v1
        with:
          node-version: 6.x

      - name: Install global Node packages
        run: |
          ./scripts/setup-npm.sh
          rm -f package-lock.json

      - name: Generate dependencies
        run: |
          python -m pip install --upgrade "pip>=20,<21" setuptools py
          python -m pip install wheel coveralls requirements-builder configparser
          cat requirements.txt > .prod-requirements.txt

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('.prod-requirements.txt') }}

      - name: Install dependencies
        run: |
          export VIRTUAL_ENV=${pythonLocation}
          cat .prod-requirements.txt
          pip install -r .prod-requirements.txt
          pip install -e .[all]
          pip freeze
          ./scripts/setup-assets.sh

      - name: Run tests
        run: |
          docker-compose up -d
          ./run-tests.sh
